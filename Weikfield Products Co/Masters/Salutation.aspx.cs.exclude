using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using DMS.Utility;
using DMS.EntityClass;
using DMS.DB;
using DMS.DataModel;
using DMS.DALSQLHelper;
public partial class Masters_Salutation : System.Web.UI.Page
{
    
    #region Private Variable
    CommanFunction Obj_Comm = new CommanFunction();

    DataSet Ds = new DataSet();
    private string StrCondition = string.Empty;
    private string StrError = string.Empty;
    private bool Flag = true;
   
    DMSalutation obj_Salutation = new DMSalutation();

    #endregion

    #region  User Funtions

    private void MakeEmptyForm()
    {
        ViewState["EditId"] = null;
        HttpContext.Current.Cache["Dir"] = "";

        txtSalutaion.Text = string.Empty;
        TxtSearch.Text = string.Empty;
        
        BtnSave.Visible = true;
        BtnUpdate.Visible = false;
        BtnDelete.Visible = false;
        BtnCancel.Visible = true;
        ReportGrid("");
        txtSalutaion.Focus();
        //SetInitialRow();
    }

    public void ReportGrid(string RepCondition)
    {
        Ds = obj_Salutation.FillReportGrid(RepCondition, out StrError);
        if (Ds.Tables.Count > 0 && Ds.Tables[0].Rows.Count > 0)
        {
            HttpContext.Current.Cache["Dir"] = Ds.Tables[0];
            GrdReport.DataSource = Ds.Tables[0];
            GrdReport.DataBind();
        }
        else
        {
            GrdReport.DataSource = null;
            GrdReport.DataBind();
        }
        obj_Salutation = null;
        Ds = null;
    }

    private bool Check()
    {
        
        Ds = new DataSet();
        Flag = true;
        if (ViewState["EditID"] != null)
            Ds = obj_Salutation.ChkDuplicate(txtSalutaion.Text, long.Parse(ViewState["EditID"].ToString()), out StrError);    
        else
            Ds = obj_Salutation.ChkDuplicate(txtSalutaion.Text, -1, out StrError);    

        
        if (Ds.Tables.Count > 0)
        {
            if (Ds.Tables[0].Rows.Count > 0)
            {
                if (long.Parse(Ds.Tables[0].Rows[0][0].ToString())>0)
                {
                    Flag = false;
                    Obj_Comm.ShowPopUpMsg("Salutation is Already Present..!", this.Page);
                    txtSalutaion.Text = string.Empty;    
                }
                
                
            }
        }
        return Flag;
    }
    
    #endregion
    
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {

            MakeEmptyForm();
        }
    }
    
    protected void BtnSave_Click(object sender, EventArgs e)
    {
        int InsertRow = 0;
        try
        {
            if (Check()==true)
            {
                InsertRow = obj_Salutation.InsertSalutaionMaster(txtSalutaion.Text.Trim(), long.Parse((Session["UserID"]).ToString()), out StrError);
                if (InsertRow > 0)
                {
                    Obj_Comm.ShowPopUpMsg("Record Saved Successfully", this.Page);
                    MakeEmptyForm();
                }    
            
            }
            
        }

        catch (Exception ex) { throw new Exception(ex.Message); }

    }
    
    protected void BtnDelete_Click(object sender, EventArgs e)
    {
        try
        {
            long DeleteId = 0;
            if (ViewState["EditID"] != null)
            {
                if (long.Parse(hdnFldUsedCnt.Value.ToString()) > 0)
                {
                    Obj_Comm.ShowPopUpMsg("Salutaion is in use. Cannot Delete Record...", this.Page);
                    return;
                }
                DeleteId = Convert.ToInt32(ViewState["EditID"]);
            }
            if (DeleteId != 0)
            {
                int iDelete=obj_Salutation.DeleteSalutaionMaster(DeleteId,Convert.ToInt32(Session["UserId"]),out StrError);
                
                if (iDelete != 0)
                {
                    Obj_Comm.ShowPopUpMsg("Record Deleted Successfully..!", this.Page);
                    MakeEmptyForm();
                }

            }
            
            Obj_Comm = null;
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    
    protected void BtnCancel_Click(object sender, EventArgs e)
    {
        MakeEmptyForm();
    }
    
    protected void BtnUpdate_Click(object sender, EventArgs e)
    {
        if (!Page.IsValid)
            return;

        
        int UpdateRow = 0;
        try
        {
            if (Check()==true)
            {
                UpdateRow = obj_Salutation.UpdateSalutaionMaster(txtSalutaion.Text.Trim(), long.Parse(ViewState["EditID"].ToString()), long.Parse((Session["UserID"]).ToString()), out StrError);
                if (UpdateRow > 0)
                {
                    Obj_Comm.ShowPopUpMsg("Record Updated Successfully", this.Page);
                    MakeEmptyForm();
                }    
            
            }

        }
        catch (Exception ex) { throw new Exception(ex.Message); }
    }
    
    protected void GrdReport_ItemCommand(object source, RepeaterCommandEventArgs e)
    {
        try
        {
            switch (e.CommandName)
            {
                case ("Select"):
                    {
                        if (Convert.ToInt32(e.CommandArgument) != 0)
                        {
                            
                            ViewState["EditID"] = Convert.ToInt32(e.CommandArgument);
                            
                            LinkButton lnk = (LinkButton)e.Item.FindControl("lbtn_List");
                           Label lbl = (Label)e.Item.FindControl("lblUsedCnt");
                            if (lnk!=null)
                            {
                                txtSalutaion.Text = lnk.Text.ToString();
                                hdnFldUsedCnt.Value = lbl.Text;
                            }
                            BtnUpdate.Visible = true;
                            BtnSave.Visible = false;
                            BtnDelete.Visible = true;
                        }

                        break;
                    }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    
    [System.Web.Services.WebMethodAttribute(), System.Web.Script.Services.ScriptMethodAttribute()]
    public static string[] GetCompletionList(string prefixText, int count, string contextKey)
    {
        if (string.IsNullOrEmpty((HttpContext.Current.Cache["Dir"]).ToString()))
        {
            DataTable DtNew = null;
            return null;
        }
        else
        {
            DMSalutation obj_St = new DMSalutation();
            DataTable DtNew = (DataTable)HttpContext.Current.Cache["Dir"];
            var query = from r in DtNew.AsEnumerable()
                        where (r.Field<string>("Salutation").ToLower()).Contains(prefixText.ToLower())
                        select (r.Field<string>("Salutation"));
            string[] SearchList = query.ToArray();
            return SearchList;
        }
    }
    
    protected void TxtSearch_TextChanged(object sender, EventArgs e)
    {
        if (string.IsNullOrEmpty((HttpContext.Current.Cache["Dir"]).ToString()))
        {
            DataTable DtNew = null;
        }
        else
        {
            DataTable DtNew = (DataTable)HttpContext.Current.Cache["Dir"];
            StrCondition = TxtSearch.Text.Trim();
            var query = from r in DtNew.AsEnumerable()
                        where (r.Field<string>("Salutation")).Contains(StrCondition)
                        select r;
            if (query != null && query.Count() > 0)
            {
                DataTable DTNEW = query.CopyToDataTable();

                GrdReport.DataSource = DTNEW;
                GrdReport.DataBind();
            }
            else
            {
                GrdReport.DataSource = null;
                GrdReport.DataBind();
            }
        }
    }

    }
