using DMS.DataModel;
using DMS.EntityClass;
using DMS.Utility;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;


public partial class Masters_DepartmentSubCategoryMaster : System.Web.UI.Page
{

    #region[Private Variables]
    DMDepartmentSubCategory Obj_DepartmentSubCategory = new DMDepartmentSubCategory();
    DepartmentSubCategoryMaster Entity_DepartmentSubCategory = new DepartmentSubCategoryMaster();
    CommanFunction Obj_Comm = new CommanFunction();
    DataSet DS = new DataSet();

    private bool Flag = true;
    private string StrError = string.Empty;
    private string StrCondition = string.Empty;
    private static bool FlagAdd = false, FlagDel = false, FlagEdit = false;
    #endregion

    #region[UserDefinedFunction]

    //User Right Function===========
    public void CheckUserRight()
    {
        FlagAdd = FlagDel = FlagEdit = false;
        try
        {
           
        }
        catch (ThreadAbortException)
        {
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //User Right Function===========

    private void MakeEmptyForm()
    {
        ViewState["EditID"] = null;
        BindCMB();
        txtDepartmentSubCategory.Focus();
        if (!FlagAdd)
            BtnSave.Visible = true;
        BtnUpdate.Visible = false;
        BtnDelete.Visible = false;
        BtnCancel.Visible = true;
        txtDepartmentSubCategory.Text = string.Empty;
        TxtSearch.Text = string.Empty;
        ReportGrid(StrCondition);
    }

    private void ReportGrid(string RepCondition)
    {
        try
        {
            DS = Obj_DepartmentSubCategory.GetDepartmentSubCategoryList(RepCondition, out StrError);

            if (DS.Tables.Count > 0 && DS.Tables[0].Rows.Count > 0)
            {
                GrdReport.DataSource = DS;
                GrdReport.DataBind();
            }
            else
            {
                GrdReport.DataSource = null;
                GrdReport.DataBind();
            }
            Obj_DepartmentSubCategory = null;
            DS = null;
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }

    private void BindCMB()
    {
        DataSet DSC = new DataSet();
        DSC = Obj_DepartmentSubCategory.GetDepartmentSubCategory(out StrError);

        if (DSC.Tables.Count > 0)
        {
            if (DSC.Tables[0].Rows.Count > 0)
            {
                ddlDepartmentCategory.DataSource = DSC.Tables[0];
                ddlDepartmentCategory.DataTextField = "DepartmentCategory";
                ddlDepartmentCategory.DataValueField = "DepartmentCategoryId";
                ddlDepartmentCategory.DataBind();
            }
        }
    }
    #endregion

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            CheckUserRight();

            MakeEmptyForm();
            ddlDepartmentCategory.Focus();
        }
    }


    private bool Check()
    {
        DataSet Ds = new DataSet();
        Ds = new DataSet();
        Flag = true;

        if (ViewState["EditID"] != null)

            Ds = Obj_DepartmentSubCategory.ChkDuplicate(txtDepartmentSubCategory.Text, long.Parse(ViewState["EditID"].ToString()), ddlDepartmentCategory.SelectedItem.Text,  out StrError);
        else
            Ds = Obj_DepartmentSubCategory.ChkDuplicate(txtDepartmentSubCategory.Text, -1, ddlDepartmentCategory.SelectedItem.Text,  out StrError);

        if (Ds.Tables.Count > 0)
        {
            if (Ds.Tables[0].Rows.Count > 0)
            {
                if (long.Parse(Ds.Tables[0].Rows[0][0].ToString()) > 0)
                {
                    Flag = false;
                    Obj_Comm.ShowPopUpMsg("Sub Category is Already Present..!", this.Page);
                    txtDepartmentSubCategory.Text = string.Empty;
                }

            }
        }
        return Flag;
    }

    protected void BtnDelete_Click(object sender, EventArgs e)
    {
        int i = Convert.ToInt32(hiddenbox.Value);
        if (i == 0)
        {
            try
            {
                int DeleteId = 0;
                if (ViewState["EditID"] != null)
                {
                    if (long.Parse(hdnFldUsedCnt.Value.ToString()) > 0)
                    {
                        Obj_Comm.ShowPopUpMsg("Unit type is in use. Cannot Delete Record...", this.Page);
                        return;
                    }
                    DeleteId = Convert.ToInt32(ViewState["EditID"]);
                }
                if (DeleteId != 0)
                {
                    Entity_DepartmentSubCategory.DepartmentSubCategoryId = DeleteId;
                    Entity_DepartmentSubCategory.UserId = Convert.ToInt32(Session["UserId"]);
                    Entity_DepartmentSubCategory.LoginDate = DateTime.Now;
                    int iDelete = Obj_DepartmentSubCategory.DeleteDepartmentSubCategory(ref Entity_DepartmentSubCategory, out StrError);
                    if (iDelete != 0)
                    {
                        Obj_Comm.ShowPopUpMsg("Record Deleted Successfully..!", this.Page);
                        MakeEmptyForm();
                    }
                    else
                    {
                        Obj_Comm.ShowPopUpMsg("Sub Department is in use. Cannot Delete Record...", this.Page);
                        return;
                    }

                }
                Entity_DepartmentSubCategory = null;
                Obj_Comm = null;
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
        }
    }
    protected void BtnCancel_Click(object sender, EventArgs e)
    {
        MakeEmptyForm();
    }
    protected void BtnSave_Click(object sender, EventArgs e)
    {
        int InsertRow = 0;
        try
        {

            if (Check() == true)
            {
                Entity_DepartmentSubCategory.DepartmentSubCategory = txtDepartmentSubCategory.Text.Trim();
                Entity_DepartmentSubCategory.DepartmentCategoryId = Convert.ToInt32(ddlDepartmentCategory.SelectedValue);

                Entity_DepartmentSubCategory.UserId = Convert.ToInt32(Session["UserId"]);
                Entity_DepartmentSubCategory.LoginDate = DateTime.Now;

                InsertRow = Obj_DepartmentSubCategory.InsertDepartmentSubCategory(ref Entity_DepartmentSubCategory, out StrError);

                if (InsertRow > 0)
                {
                    Obj_Comm.ShowPopUpMsg("Record Saved Successfully", this.Page);
                    MakeEmptyForm();
                    ddlDepartmentCategory.Focus();
                    Entity_DepartmentSubCategory = null;
                    Obj_Comm = null;
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    protected void BtnUpdate_Click(object sender, EventArgs e)
    {
        int i = Convert.ToInt32(hiddenbox.Value);
        if (i == 0)
        {
            int UpdateRow = 0;
            try
            {
                if (Check() == true)
                {
                    if (ViewState["EditID"] != null)
                    {
                        Entity_DepartmentSubCategory.DepartmentSubCategoryId = Convert.ToInt32(ViewState["EditID"]);
                    }
                    Entity_DepartmentSubCategory.DepartmentSubCategory = txtDepartmentSubCategory.Text.Trim();
                    Entity_DepartmentSubCategory.DepartmentCategoryId = Convert.ToInt32(ddlDepartmentCategory.SelectedValue);
                    Entity_DepartmentSubCategory.UserId = Convert.ToInt32(Session["UserId"]);
                    Entity_DepartmentSubCategory.LoginDate = DateTime.Now;
                    UpdateRow = Obj_DepartmentSubCategory.UpdateDepartmentSubCategory(ref Entity_DepartmentSubCategory, out StrError);
                    if (UpdateRow != 0)
                    {
                        Obj_Comm.ShowPopUpMsg("Record Updated Successfully", this.Page);
                        MakeEmptyForm();
                        ddlDepartmentCategory.Focus();
                        Entity_DepartmentSubCategory = null;
                        Obj_Comm = null;
                    }
                }
            }

            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
        }
    }

    protected void GrdReport_ItemCommand(object source, RepeaterCommandEventArgs e)
    {
        try
        {
            switch (e.CommandName)
            {
                case ("Select"):
                    {
                        if (Convert.ToInt32(e.CommandArgument) != 0)
                        {
                            ViewState["EditID"] = Convert.ToInt32(e.CommandArgument);
                            LinkButton lnk = (LinkButton)e.Item.FindControl("lbtn_List");
                            Label lbl = (Label)e.Item.FindControl("lblUsedCnt");
                            if (lnk != null)
                            {
                                hdnFldUsedCnt.Value = lbl.Text;
                            }
                            DS = Obj_DepartmentSubCategory.GetDepartmentSubCategoryForEdit(Convert.ToInt32(e.CommandArgument), out StrError);
                            if (DS.Tables.Count > 0 && DS.Tables[0].Rows.Count > 0)
                            {
                                txtDepartmentSubCategory.Text = DS.Tables[0].Rows[0]["DepartmentSubCategory"].ToString();

                                if (Convert.ToInt32(DS.Tables[0].Rows[0]["DepartmentCategoryID"]) > 0)
                                {
                                    ddlDepartmentCategory.SelectedValue = DS.Tables[0].Rows[0]["DepartmentCategoryID"].ToString();
                                }
                            }
                            else
                            {
                                MakeEmptyForm();
                            }
                            DS = null;
                            Obj_DepartmentSubCategory = null;
                            BtnSave.Visible = false;
                            if (!FlagEdit)
                                BtnUpdate.Visible = true;
                            if (!FlagDel)
                                BtnDelete.Visible = true;
                            txtDepartmentSubCategory.Focus();
                        }

                        break;
                    }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    protected void TxtSearch_TextChanged(object sender, EventArgs e)
    {
        StrCondition = TxtSearch.Text.Trim();
        ReportGrid(StrCondition);
    }

    [System.Web.Services.WebMethodAttribute(), System.Web.Script.Services.ScriptMethodAttribute()]
    public static string[] GetCompletionList(string prefixText, int count, string contextKey)
    {
        DMDepartmentSubCategory Obj_DepartmentSubCategory = new DMDepartmentSubCategory();
        string[] SearchList = Obj_DepartmentSubCategory.GetSuggestRecord(prefixText);
        return SearchList;
    }
}